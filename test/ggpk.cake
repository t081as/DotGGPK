using System.IO;
using System.Text;

//////////////////////////////////////////////////////////////////////
// ARGUMENTS
//////////////////////////////////////////////////////////////////////

var target = Argument("target", "Default");

//////////////////////////////////////////////////////////////////////
// TASKS
//////////////////////////////////////////////////////////////////////

Task("ggpk-fail-length")
    .Does(() =>
{
    using (BinaryWriter writer = new BinaryWriter(System.IO.File.Create("fail-length.ggpk")))
    {
        writer.Write((uint)uint.MaxValue);
        writer.Write(Encoding.ASCII.GetBytes("GGPK"));
        writer.Write((uint)0);
    }
});

Task("ggpk-fail-marker")
    .Does(() =>
{
    using (BinaryWriter writer = new BinaryWriter(System.IO.File.Create("fail-marker.ggpk")))
    {
        writer.Write((uint)12);
        writer.Write(Encoding.ASCII.GetBytes("ABCD"));
        writer.Write((uint)0);
    }
});

//////////////////////////////////////////////////////////////////////
// TASK TARGETS
//////////////////////////////////////////////////////////////////////

Task("Default")
    .IsDependentOn("ggpk-fail-length")
    .IsDependentOn("ggpk-fail-marker");

//////////////////////////////////////////////////////////////////////
// EXECUTION
//////////////////////////////////////////////////////////////////////

RunTarget(target);